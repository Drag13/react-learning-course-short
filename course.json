{
  "title": "React For Beginners - free course by Itera",
  "lessons": [
    {
      "title": "What is React",
      "type": "Lecture",
      "shortSummary": "Introduction to React.JS, the idea and JSX",
      "keyPoints": [
        "What is the React",
        "React - advantages and disadvantages",
        "Why to learn React nowadays"
      ],
      "presentation": "https://drag13.io/react-learning-course-short/0/index.html"
    },
    {
      "title": "Starting new project with create-react-app",
      "type": "Workshop",
      "keyPoints": [
        "Starting new React project from scratch using create-react-app",
        "Project structure",
        "Files you need to know",
        "Predefined commands",
        "Code examples"
      ],
      "prerequisite": [
        "Install [Node.JS](https://nodejs.org/en/) with NPM",
        "Install [VsCode](https://code.visualstudio.com/)"
      ],
      "presentation": "https://drag13.io/react-learning-course-short/1/index.html",
      "hometask": [
        "Create new repository at [github](https://github.io) and name it **react-for-beginners-itera**",
        "Select .gitignore from VisualStudio",
        "Clone repo locally using `git clone`",
        "Initialize new project with `npm init -y`",
        "Initialize new react application using `npx create-react-app my-page --template typescript`",
        "Create a [JSON](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON#example_json) with next information:",
        "First Name, Short biography",
        "Short biography",
        "Public contacts",
        "Use React to display data from the JSON on the page",
        "Commit and push the results with `git add .`, `git commit -m \"Initial commit\"`, `git push`"
      ]
    },
    {
      "title": "What is component and why you should use it",
      "type": "Lecture",
      "keyPoints": [
        "What is the component",
        "Why to use the components",
        "How to pass data into the component",
        "How to get data from the component",
        "Why TypeScript"
      ],
      "presentation": "https://drag13.io/react-learning-course-short/2/index.html"
    },
    {
      "title": "Building your own component",
      "type": "Workshop",
      "keyPoints": [
        "What is component - quick recap",
        "Building \"dumb\" components - functional and class-based",
        "Building \"smart\" component - functional and class-based",
        "Components - best practices"
      ],
      "prerequisite": [
        "Create new project with [create-react-app](https://drag13.io/react-learning-course-short/1/index.html)"
      ],
      "presentation": "https://drag13.io/react-learning-course-short/3/index.html",
      "hometask": [
        "Add footer to your application",
        "Split the application you've built previously into components",
        "Create a component named `<AppLink>` which will render `a`. Component should:",
        "Be typed",
        "Accept custom text",
        "Accept custom url",
        "Accept callback that should be invoked before the click",
        "Put the new component into the footer",
        "When clicked, it should log into the console next text: `redirecting user to the next {link}` where `{link}` should be a's href"
      ]
    },
    {
      "title": "Change Detection",
      "type": "Lecture",
      "keyPoints": [
        "What is change detection",
        "How it works in React (simplified)",
        "React not rendering my changes examples"
      ]
    },
    {
      "title": "Managing state in React",
      "type": "Lecture",
      "keyPoints": [
        "`setState` and `useState`",
        "[Context](https://reactjs.org/docs/context.html)",
        "[Redux](https://redux.js.org/) + [Redux Toolkit](https://reduxtoolkit.js.org/),",
        "[MobX](https://mobx.js.org/react-integration.html)"
      ],
      "hometask": [
        "Install redux and redux toolkit",
        "Write the timer that will with two buttons ",
        "start and stop",
        "Timer should:",
        "Be stopped by default",
        "On start it should display time in format HH:MM:SS",
        "On start page title (<title>) should be changed to \"Timer is running\"",
        "On stop timer should be stopped and show the last value",
        "Page title should be returned back to normal",
        "Uninstall redux",
        "Install MobX",
        "Implement same functionality"
      ]
    },
    {
      "title": "Forms with React, Formik and Yup",
      "type": "Workshop",
      "keyPoints": [
        "Building your first form with [Formik](https://formik.org/docs/overview)",
        "Validation with [Yup](https://github.com/jquense/yup)"
      ],
      "prerequisite": [
        "Install [Formik](https://www.npmjs.com/package/formik) and [Yup](https://www.npmjs.com/package/yup) before the workshop"
      ]
    },
    {
      "title": "Single Page Application",
      "type": "Lecture",
      "keyPoints": [
        "Server side routing",
        "Client side routing",
        "Benefits",
        "React router"
      ]
    },
    {
      "title": "React Router",
      "type": "Lecture",
      "keyPoints": [
        "Install react router",
        "Basic setup",
        "Data Binding",
        "Router guard"
      ],
      "hometask": [
        "Add header for your application",
        "Create new page named `about`",
        "Move all content related yourself to the page about",
        "Add new query parameter named `ln` to your link like this: `https://8080?ln=ua`",
        "If `ln` equals `ua` all texts should be in Ukrainian language",
        "If `ln` equals `en` all text should be in English (feel free to use google translate if needed)"
      ]
    },
    {
      "title": "Network, Fetch and Axios",
      "type": "Lecture",
      "keyPoints": ["Default way with fetch", "Setup axios"]
    },
    {
      "title": "Styling, CSS Modules and Styled Components",
      "type": "Lecture",
      "keyPoints": ["Preprocessors", "CSS Modules", "CSS in JS"],
      "hometask": ["TBD"]
    },
    {
      "title": "UI libraries",
      "type": "Lecture",
      "keyPoints": ["Purpose", "How to choose", "Material UI"]
    },
    {
      "title": "Tests",
      "type": "Lecture",
      "keyPoints": [
        "Why test",
        "Unit tests VS integration tests vs e2e",
        "Jest"
      ]
    }
  ]
}
