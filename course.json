{
  "title": "React For Beginners - free course by Itera",
  "lessons": [
    {
      "name": "react-intro",
      "title": "What is React",
      "type": "Lecture",
      "shortSummary": "Introduction to React.JS, the idea and JSX",
      "keyPoints": [
        "What is the React",
        "Three pillars of React",
        "React - advantages and disadvantages",
        "Why to learn React nowadays"
      ],
      "published": true,
      "links": [
        ["Documentation", "https://reactjs.org/docs/getting-started.html"],
        ["React - source code", "https://github.com/facebook/react"],
        ["React changelog", "https://github.com/facebook/react/blob/main/CHANGELOG.md"],
        [
          "Why React is a bad idea",
          "https://blog.devgenius.io/react-costs-companies-a-lot-of-money-6bfa3e5cc6f4"
        ]
      ]
    },
    {
      "title": "Starting new project with create-react-app",
      "name": "react-cra",
      "type": "Workshop",
      "keyPoints": [
        "Starting new React project from scratch using create-react-app",
        "Project structure",
        "Files you need to know",
        "Predefined commands",
        "Code examples"
      ],
      "prerequisite": [
        "Install <a href=\"https://nodejs.org/en/\">Node.JS</a>",
        "Install <a href=\"https://code.visualstudio.com/\">VsCode</a>"
      ],
      "published": true,
      "hometask": [
        "Create new repository at <a href=\"https://github.io\">GitHub</a> and name it react-for-beginners-itera",
        "Select .gitignore from VisualStudio",
        "Clone repo locally using <i>git clone</i>",
        "Initialize new project with <i>npm init -y</i>",
        "Initialize new react application using <i>npx create-react-app my-page --template typescript</i>",
        "Create a new <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON#example_json\">JSON</a> with next information:",
        "First Name",
        "Short biography",
        "Public contacts",
        "Use React to display data from the JSON on the page",
        "Commit and push the results with <i>git add .</i>, <i>git commit -m \"Initial commit\"</i>, <i>git push</i>"
      ],
      "links": [
        ["Create-React-App documentation", "https://create-react-app.dev/"],
        ["Create a new react app", "https://reactjs.org/docs/create-a-new-react-app.html"],
        [
          "Package.json - documentation",
          "https://docs.npmjs.com/cli/v7/configuring-npm/package-json"
        ]
      ]
    },
    {
      "title": "What is React Component",
      "name": "react-components",
      "type": "Lecture",
      "keyPoints": [
        "What is the component",
        "Why to use the components",
        "Component types",
        "How to pass data into the component",
        "How to get data from the component",
        "Why TypeScript"
      ],
      "links": [
        ["What is JSX", "https://reactjs.org/docs/introducing-jsx.html"],
        ["JSX under the hood", "https://www.telerik.com/blogs/how-jsx-react-works-under-hood"],
        [
          "Smart VS Dumb components",
          "https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43"
        ],
        ["TypeScript", "https://www.typescriptlang.org/"]
      ],
      "published": true
    },
    {
      "title": "Building React Component",
      "name": "react-new-component",
      "type": "Workshop",
      "links": [
        [
          "Class-based MessageBlock example",
          "https://github.com/Drag13/react-learning-course-short/blob/master/presentations/react-new-component/code/mb-class.tsx"
        ],
        [
          "Functional MessageBlock example",
          "https://github.com/Drag13/react-learning-course-short/blob/master/presentations/react-new-component/code/mb-functional.tsx"
        ],
        [
          "Functional Counter example",
          "https://github.com/Drag13/react-learning-course-short/blob/master/presentations/react-new-component/code/counter-functional.tsx"
        ],
        [
          "Class-based Counter example",
          "https://github.com/Drag13/react-learning-course-short/blob/master/presentations/react-new-component/code/counter-cb.tsx"
        ]
      ],
      "keyPoints": [
        "What is component - quick recap",
        "Building \"dumb\" components - functional and class-based",
        "Building \"smart\" component - functional and class-based",
        "What and when to use",
        "Components - best practices"
      ],
      "prerequisite": [
        "Create new project using <a target=\"_blank\" href=\"https://drag13.io/react-learning-course-short/react-components/index.html\">example</a>"
      ],
      "published": true,
      "hometask": [
        "Add footer to your application",
        "Split the application you've built previously into components",
        "Create a component named `<AppLink>` which will render `a`. Component should:",
        "Be typed",
        "Accept custom text",
        "Accept custom url",
        "Accept callback that should be invoked before the click",
        "Put the new component into the footer",
        "When clicked, it should log into the console next text: `redirecting user to the next {link}` where `{link}` should be a's href"
      ]
    },
    {
      "title": "Styling in React - from plain CSS to CSS in JS",
      "name": "react-styling",
      "type": "Lecture",
      "keyPoints": ["Default way", "Using CSS modules", "Preprocessors", "CSS in JS"],
      "published": true,
      "links": [
        ["Css Modules", "https://css-tricks.com/css-modules-part-1-need/"],
        ["Sass - css with superpowers", "https://sass-lang.com/"],
        ["How to add SASS to React", "https://create-react-app.dev/docs/adding-a-sass-stylesheet/"],
        ["Styled Components", "https://styled-components.com/docs/basics#getting-started"],
        [
          "Styled Components extension",
          "https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components"
        ]
      ]
    },
    {
      "title": "Tracking Changes",
      "name": "react-change-detection",
      "type": "Lecture",
      "keyPoints": [
        "What is change detection",
        "Implicit change detection with Angular",
        "Explicit change detection with React",
        "How it works in React (simplified)",
        "Typical mistakes"
      ],
      "links": [
        ["State in React", "https://reactjs.org/docs/faq-state.html"],
        ["Using the State Hook", "https://reactjs.org/docs/hooks-state.html"],
        ["Angular vs React - Change detection", "https://morioh.com/p/caccd1b76c5c"]
      ],
      "published": true
    },
    {
      "title": "Managing state in React",
      "name": "react-state-management",
      "type": "Workshop",
      "keyPoints": ["Problems with setState and useState", "Context", "Redux", "MobX"],
      "prerequisite": [
        "Copy the <a href=\"https://raw.githubusercontent.com/Drag13/react-learning-course-short/master/presentations/react-state-management/code/index_general.tsx\">code</a> to your project",
        "Install MobX - <i>npm i mobx mobx-react-lite</i>"
      ],
      "links": [
        ["Context", "https://reactjs.org/docs/context.html"],
        ["Redux", "https://redux.js.org/"],
        [
          "You might not need Redux",
          "https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367"
        ],
        ["Redux Toolkit", "https://reduxtoolkit.js.org/"],
        ["MobX", "https://mobx.js.org/react-integration.html"]
      ],
      "hometask": [
        "Using context write the timer that will have two buttons",
        "start and stop",
        "Timer should:",
        "Be stopped by default",
        "On start, App should display time in format HH:MM:SS",
        "On start page title should be changed to \"Timer is running\"",
        "On stop timer should be stopped, the latest value should be present",
        "Page title should be returned back to normal",
        "Install MobX",
        "Implement same functionality with MobX"
      ],
      "published": true
    },
    {
      "title": "Forms - Default way and React-Hook-Forms",
      "published": true,
      "name": "react-forms",
      "type": "Workshop",
      "keyPoints": [
        "React Forms - default way",
        "Building your first form with  <a href=\"https://react-hook-form.com/get-started\">React Hook Form</a>",
        "Validation with Yup"
      ],
      "prerequisite": [
        "Install <a href=\"https://react-hook-form.com/get-started\">React Hook Form</a> before the workshop"
      ],
      "links": [
        ["React forms - default way", "https://reactjs.org/docs/forms.html"],
        ["React Hook Form", "https://react-hook-form.com/get-started"],
        ["Yup", "https://github.com/jquense/yup"]
      ]
    },
    {
      "title": "Single Page Application",
      "hidden": true,
      "name": "spa",
      "type": "Lecture",
      "keyPoints": ["Server side routing", "Client side routing", "Benefits", "React router"]
    },
    {
      "title": "Routing in React",
      "name": "react-router",
      "type": "Lecture",
      "keyPoints": ["Install react router", "Basic setup", "Data Binding", "Router guard"],
      "links": [["React Router", "https://reactrouter.com/docs/en/v6/getting-started/overview"]],
      "hometask": [
        "Add header for your application",
        "Create new page named `about`",
        "Move all content related yourself to the page about",
        "Add new query parameter named `ln` to your link like this: `https://8080?ln=ua`",
        "If `ln` equals `ua` all texts should be in Ukrainian language",
        "If `ln` equals `en` all text should be in English (feel free to use google translate if needed)"
      ],
      "published": true
    },
    {
      "title": "React and network",
      "name": "react-network",
      "type": "Lecture",
      "keyPoints": ["Fetch", "Axios"],
      "published": true,
      "links": [
        ["Fetch", "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"],
        ["Axios", "https://github.com/axios/axios"],
        ["Public API", "https://github.com/public-apis/public-apis"]
      ]
    },

    {
      "title": "UI libraries",
      "name": "react-ui-lib",
      "type": "Lecture",
      "keyPoints": ["Purpose", "How to choose", "Material UI"]
    },
    {
      "title": "Tests",
      "name": "react-testing",
      "type": "Lecture",
      "keyPoints": ["Why test", "Testing pyramid", "What should be tested", "Testing with Jest"],
      "published": true,
      "links": [
        ["Testing Recipes", "https://reactjs.org/docs/testing-recipes.html"],
        ["Create-React-App - testing", "https://create-react-app.dev/docs/running-tests/"],
        ["Jest", "https://jestjs.io/"],
        ["React Testing Library", "https://testing-library.com/docs/react-testing-library/intro/"]
      ]
    }
  ]
}
